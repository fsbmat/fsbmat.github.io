library(mapproj) #Projeções e grids
library(ggmap) #Gmaps, OSM + mapas baseados em ggplot2
library(rgdal)
library(RColorBrewer)
setwd("~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG")
par(mar=c(1,1,1,1))
map("worldHires","Brazil")
map.axes()
map.scale(ratio = F, cex = 0.7) #tentem ratio = T
abline(h = 0, lty = 2)
map("world","Brazil", fill=T, col="grey90")
map(,,add=T)
map.axes()
map.scale(ratio=F, cex=0.7)
abline(h=0, lty = 2)
map.cities(country = "Brazil",minpop = 2000000,pch=19, cex=1.2)# pacote maps
m <- map("world","Brazil", fill=T, col="grey95")
map(,,add=T)
map.axes()
map.scale(ratio=F, cex=0.7)
abline(h=0, lty = 2)
map.grid(m, nx = 5, ny = 5, col="grey50", font=1, cex=0.7 , pretty = T)#library(mapproj)
file<- readShapePoly(file.choose())
br <- readShapePoly("./shapefiles/brasil/BRA_adm_shp/BRA_adm0.shp") # 0: país, 1: estados, 2: municípios
br <- readShapePoly("./blog_posts/28-01-2017/MG/31MUE250GC_SIR.shp") # 0: país, 1: estados, 2: municípios
br <- readShapePoly("D:/Documentos/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG/31MUE250GC_SIR.shp") # 0: país, 1: estados, 2: municípios
estados1 <- readShapePoly("D:/Documentos/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG/31MUE250GC_SIR.shp") # 0: país, 1: estados, 2: municípios
cidades <- readShapePoly("D:/Documentos/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG/31MUE250GC_SIR.shp")
estados <- readOGR("D:/Documentos/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG/31MUE250GC_SIR.shp")
rm(list=ls())
library(ggmap)
saoPaulo = c(-46.403654, -23.688747, -46.877542, -23.424317)
meuMapa = get_map(location = saoPaulo,
zoom = 11,
source = "google",
maptype="roadmap")
meuMapa
plot(meuMapa)
meuMapa = get_map(location = saoPaulo,
zoom = 21,
source = "google",
maptype="roadmap")
plot(meuMapa)
ggmap(meuMapa)
ggmap("meuMapa")
rm(list=ls())
library(ggmap)
saoPaulo = c(-46.403654, -23.688747, -46.877542, -23.424317)
meuMapa = get_map(location = saoPaulo,
zoom = 21,
source = "google",
maptype="roadmap")
ggmap("meuMapa")
plot("meuMapa")
rm(list=ls())
library(ggmap)
saoPaulo = c(-46.403654, -23.688747, -46.877542, -23.424317)
meuMapa = get_map(location = saoPaulo,
zoom = 21,
source = "google",
maptype="roadmap")
plot("meuMapa")
plot(meuMapa)
meuMapa = get_map(location = saoPaulo,
zoom = 10,
source = "google",
maptype="roadmap")
plot(meuMapa)
ggmap(meuMapa, extent = "device") + geom_point(data = corridas[1:18,], aes(x = longitude, y = latitude, alpha = 0.5, size = 0.5))
library("rgdal")
setwd("~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2")
setwd("~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2")
pb_poligonos_rgdal <- readOGR(dsn="aesa_pb/Municipios", layer="Municipios", verbose=FALSE, stringsAsFactors=FALSE);
library("rgdal")
setwd("~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2")
pb_poligonos_rgdal <- readOGR(dsn="aesa_pb/Municipios", layer="Municipios", verbose=FALSE, stringsAsFactors=FALSE);
pb_poligonos_rgdal <- readOGR(dsn="~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2", layer="Municipios", verbose=FALSE, stringsAsFactors=FALSE);
pb_poligonos_rgdal <- readOGR(dsn="~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2", layer="Municípios", verbose=FALSE, stringsAsFactors=FALSE);
pb_poligonos_rgdal <- readOGR(dsn="~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2", layer="Municipios", verbose=FALSE, stringsAsFactors=FALSE);
library("rgdal")
pb_poligonos_rgdal <- readOGR(dsn="~/GitHub/webpage/fsbmat.github.io/blog_posts/28-01-2017/MG2", layer="Municipios", verbose=FALSE, stringsAsFactors=FALSE);
require(RgoogleMaps)
lat_c<-51.47393
lon_c<-7.22667
bb<-qbbox(lat = c(lat_c[1]+0.01, lat_c[1]-0.01), lon = c(lon_c[1]+0.03, lon_c[1]-0.03))
OSM.map<-GetMap.OSM(lonR=bb$lonR, latR=bb$latR, scale = 20000, destfile="bochum.png")
image(OSM.map)
lat_c<-51.47393
lon_c<-7.22667
bb<-qbbox(lat = c(lat_c[1]+0.01, lat_c[1]-0.01), lon = c(lon_c[1]+0.03, lon_c[1]-0.03))
OSM.map<-GetMap.OSM(lonR=bb$lonR, latR=bb$latR, scale = 20000, destfile=”bochum.png”)
library(maptools)
library(RColorBrewer)
library(classInt)
sport<- readShapePoly("london_sport.shp")
library(rmaps)
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
chart_link
library(ggplot2)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
packageVersion('plotly')
install.packages("plotly")
packageVersion('plotly')
library(ggplot2)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
library(dplyr)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
library(plotly)
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
library(plotly)
packageVersion('plotly')
install.packages(c("acepack", "AER", "BH", "bookdown", "car", "chron", "coda", "colorspace", "curl", "data.table", "DEoptimR", "Deriv", "digest", "electionsBR", "evaluate", "ggrepel", "ggthemes", "ghit", "git2r", "gmp", "haven", "Hmisc", "hms", "htmlTable", "htmlwidgets", "jsonlite", "knitr", "leaps", "miscTools", "openssl", "pbapply", "plm", "plotrix", "pracma", "R6", "Rcpp", "RcppArmadillo", "RefManageR", "reshape", "ResourceSelection", "rgl", "Rmpfr", "rms", "robustbase", "rootSolve", "rsconnect", "seasonal", "shiny", "SparseM", "speedglm", "statmod", "stringi", "TH.data", "tidyr", "treemap", "tseries", "VGAM", "webshot", "XML", "xml2", "zoo"))
library(plotly)
packageVersion('plotly')
library(dplyr)
library(ggplot2)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
chart_link
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
chart_link = plotly_POST(p, filename="choropleth/ag")
library(ggmap)
mapImageData1 <- get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon = -0.016179, lat = 19.5322),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon = 44.25, lat = 19.5322),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon = 4425, lat = 195322),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon =  -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon =  -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "satellite",
zoom = 10)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon =  -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "satellite",
zoom = 15)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon =  -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "satellite",
zoom = 14)
ggmap(mapImageData1,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "hybrid",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "terrain",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "roadmap",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "roadmap",
zoom = 14)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "roadmap",
zoom = 10)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "roadmap",
zoom = 12)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "roadmap",
zoom = 14)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "roadmap",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "watercolor",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "terrain-labels",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "google",
maptype = "hybrid",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
mapImageData4 <- get_map(location = c(lon = -44.4321, lat = -19.8866),
color = "color",
source = "osm",
maptype = "hybrid",
zoom = 15)
ggmap(mapImageData4,
extent = "device",
ylab = "Latitude",
xlab = "Longitude")
library(ggplot2)
library(ggmap)
geodata <- data.frame(
lat = c(-34.6555,-34.6559,-34.7085,-34.5877,-34.6995,-34.6037,-34.7678,-34.7133, -34.7966),
lon = c(-58.6452,-58.6167,-58.5859,-58.532,-58.3921,-58.3816,-58.3792,-58.3711, -58.276)
)
qmplot(lon, lat, data = geodata,
colour = I("red"),
size   = I(6),
darken = .2,
alpha  = 0.2,
source = 'google')
ciudad <- get_map("Buenos Aires, Argentina", zoom=10)
p     <- ggmap(ciudad)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
ciudad <- get_map("Buenos Aires, Argentina", zoom=10)
p      <- ggmap(ciudad)
p      <- p+stat_density2d(aes(x = lon, y = lat, fill=..level..),
data=geodata,geom="polygon", alpha=0.2)
p + scale_fill_gradient(low = "yellow", high = "red")
geodata <- data.frame(
lat = c(-19.6555,-19.6559,-19.7085,-19.5877,-19.6995,-19.6037,-19.7678,-19.7133, -19.7966),
lon = c(-44.4321,-44.6167,-44.5859,-44.532,-44.3921,-44.3816,-44.3792,-44.3711, -44.276)
)
qmplot(lon, lat, data = geodata,
colour = I("red"),
size   = I(6),
darken = .2,
alpha  = 0.2,
source = 'google')
ciudad <- get_map("Buenos Aires, Argentina", zoom=10)
p     <- ggmap(ciudad)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
ciudad <- get_map("Buenos Aires, Argentina", zoom=10)
p     <- ggmap(ciudad)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
geodata <- data.frame(
lat = c(-19.6555,-19.6559,-19.7085,-19.5877,-19.6995,-19.6037,-19.7678,-19.7133, -19.7966),
lon = c(-44.4321,-44.6167,-44.5859,-44.532,-44.3921,-44.3816,-44.3792,-44.3711, -44.276)
)
qmplot(lon, lat, data = geodata,
colour = I("red"),
size   = I(6),
darken = .2,
alpha  = 0.2,
source = 'google')
ciudad <- get_map("Buenos Aires, Argentina", zoom=10)
p     <- ggmap(ciudad)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
rm(list=ls())
library(ggplot2)
library(ggmap)
geodata <- data.frame(
lat = c(-19.6555,-19.6559,-19.7085,-19.5877,-19.6995,-19.6037,-19.7678,-19.7133, -19.7966),
lon = c(-44.4321,-44.6167,-44.5859,-44.532,-44.3921,-44.3816,-44.3792,-44.3711, -44.276)
)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
ciudad <- get_map("Florestal, Brasil", zoom=10)
p     <- ggmap(ciudad)
p + geom_point(data = geodata,
aes(x = lon, y = lat),
color = "red",
size  = 11,
alpha = 0.5)
ciudad <- get_map("Florestal, Brasil", zoom=10)
p      <- ggmap(ciudad)
p      <- p+stat_density2d(aes(x = lon, y = lat, fill=..level..),
data=geodata,geom="polygon", alpha=0.2)
p + scale_fill_gradient(low = "yellow", high = "red")
ggmap(ciudad)
ciudad <- get_map("Florestal, Brasil", zoom=15)
ggmap(ciudad)
ciudad <- get_map("Florestal, Brasil", zoom=13)
ggmap(ciudad)
ciudad <- get_map("Florestal, Brasil", zoom=13,maptype = "hibrid")
ciudad <- get_map("Florestal, Brasil", zoom=13,maptype = "hybrid")
ggmap(ciudad)
ciudad <- get_map("Florestal, Brasil", zoom=15,maptype = "hybrid")
ggmap(ciudad)
